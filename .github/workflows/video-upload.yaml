# 
# GitHub Actions workflow.
#
# Automatically deploys the Node.js microservice to Kubernetes on push to the main branch.
# For real use you might want to restrict this to the "prod" branch.
#

name: Deploy video-upload

on:
  #
  # Deploys the microservice on push to the specified subdirectory in the main branch of this code repository.
  #
  push: 
    branches:
      - main
    paths:
      - video-upload/**

  #
  # Allows deployment to be invoked manually through the GitHub Actions user interface.
  #
  workflow_dispatch: 

jobs:

  deploy:
    runs-on: ubuntu-latest
    
    env:
      VERSION: ${{ github.sha }}
      CONTAINER_REGISTRY: ${{ secrets.CONTAINER_REGISTRY }}
      REGISTRY_UN: ${{ secrets.REGISTRY_UN }}
      REGISTRY_PW: ${{ secrets.REGISTRY_PW  }}
      NAME: video-upload
      DIRECTORY: video-upload

    steps:
      
      # Checks-out your repository under $GITHUB_WORKSPACE.
      - uses: actions/checkout@v3

      #
      # Builds the Docker image.
      #
      - name: Build
        run: ./scripts/cd/build-image.sh

      #
      # Publishes the Docker image to the container registry.
      #
      - name: Publish
        run: ./scripts/cd/push-image.sh

      #
      # Installs Kubectl and connects it to the cluster.
      #
      # https://github.com/marketplace/actions/kubernetes-cli-kubectl
      #
      - uses: tale/kubectl-action@v1
        with:
          base64-kube-config: 
          kubectl-version: v1.24.2
      
      #
      # Expands the configuration template and deploys the microservice.
      #
      - name: Deploy
        run: ./scripts/cd/deploy.sh
